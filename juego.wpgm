import jugador.*
import tablero.*
import cartas.*
import wollok.game.*

object marco {
    var property position = game.origin()
    method image() = "marco.png"
}

object monto1 {
    var property position = game.origin()
    method image() = "monto.jpg"
}

object monto2 {
    var property position = game.origin()
    method image() = "monto.jpg"
}

program juego {


const jugador1 = new Jugador()
const jugador2 = new Jugador()
tablero.anadirJugadores(jugador1)
tablero.anadirJugadores(jugador2)

jugador1.turno(1)
var jugador = tablero.jugadorConTurno()

var mesaAux = tablero.mostrarMesa()
var manoAux = jugador.mostrarMano()

var carta = 0
var indiceMesa = 0
var indiceMano = 0
var state = 0
var cont = 0
var cont2 = 0
var montoVisible1 = false
var montoVisible2 = false

game.width(22)
game.height(22)

game.boardGround("fondo1.png")

tablero.llenarMazo()

if (!tablero.mostrarMazo().isEmpty()) {
    // llenar mesa
    tablero.llenarMesa()
    mesaAux.forEach({
            carta => game.addVisual(carta)
            carta.position(game.at(cont+4,10))
            cont+=4})

    // repartir jugadores
    tablero.repartirJugadores()
    jugador1.mostrarMano().forEach({
        carta => game.addVisual(carta)
        carta.position(game.at(cont2+4,17))
        cont2+=4})
    cont2 = 0
    jugador2.mostrarMano().forEach({
        carta => game.addVisual(carta)
        carta.position(game.at(cont2+4,1))
        cont2+=4})cont2 = 0

} else {
    throw new Exception(message="El mazo no fue llenado correctamente antes de repartir.")
  }



game.addVisual(marco)
marco.position(manoAux.get(0).position())



keyboard.left().onPressDo {
    if (state == 0) {
        //console.println(indiceMano)
        indiceMano -= 1
        if(indiceMano < 0) {
            indiceMano = manoAux.size() - 1
        }
        carta = manoAux.get(indiceMano)
        marco.position(carta.position())
    } else if (state == 1) {
        indiceMesa -= 1
        if(indiceMesa < 0) {
            indiceMesa = mesaAux.size() - 1
        }
        carta = mesaAux.get(indiceMesa)
        marco.position(carta.position())
    }
}

keyboard.right().onPressDo {
    if (state == 0) {
        //console.println(indiceMano)
        indiceMano += 1
        if(indiceMano >= manoAux.size()) {
            indiceMano = 0
        }
        carta = manoAux.get(indiceMano)
        marco.position(carta.position())
    } else if (state == 1) {
        indiceMesa += 1
        if(indiceMesa >= mesaAux.size()) {
            indiceMesa = 0
        }
        carta = mesaAux.get(indiceMesa)
        marco.position(carta.position())
    }
}

keyboard.enter().onPressDo {
    if(jugador.mostrarCartasAJugar().contains(carta)) {
        throw new Exception(message="La carta ya fue elegida.")
        return 0
    }
    if(manoAux.contains(carta)) state = 1
    console.println(carta.valorCarta())
    console.println(carta.paloCarta())
    jugador.anadirCartaAJugar(carta)
    }

keyboard.e().onPressDo {
    state = 0
    if(jugador.hayJugada()){
        jugador.mostrarCartasAJugar().forEach({_carta => game.removeVisual(_carta)})
        tablero.jugada(jugador)
        jugador.jugada()
    
        if(jugador1.turno() == 1 && !montoVisible1) {
            game.addVisual(monto1)
            monto1.position(game.at(20,20))
            montoVisible1 = true
        }
        if(jugador2.turno() == 1 && !montoVisible2) {
            game.addVisual(monto2)
            monto2.position(game.at(20,0))
            montoVisible2 = true
        }
    } else {
        jugador.limpiarCartasAJugar()
        throw new Exception(message="No hay jugada.")
        }
    tablero.cambiarTurno()
    jugador = tablero.jugadorConTurno()
    mesaAux = tablero.mostrarMesa()
    manoAux = jugador.mostrarMano()
    }

var posY = 9.5

keyboard.t().onPressDo {
    if(manoAux.contains(carta)){
        const columna = mesaAux.size() % 4

        game.removeVisual(carta)
        jugador.eliminarCartaMano(carta)
        tablero.anadirCartaMesa(carta)

        console.println(columna)
        if(columna == 0) posY -= 4
        const posX = 4 + (columna * 4) 

        game.addVisual(carta)
        carta.position(game.at(posX,posY))
        
    }
    tablero.cambiarTurno()
    jugador = tablero.jugadorConTurno()
    mesaAux = tablero.mostrarMesa()
    manoAux = jugador.mostrarMano()
}

keyboard.f().onPressDo {
    if(jugador1.mostrarMano().isEmpty() && jugador2.mostrarMano().isEmpty()){
        cont2 = 0
        tablero.repartirJugadores()
        jugador1.mostrarMano().forEach({
            carta => game.addVisual(carta)
            carta.position(game.at(cont2+4,18))
            cont2+=4})
        cont2 = 0
        jugador2.mostrarMano().forEach({
            carta => game.addVisual(carta)
            carta.position(game.at(cont2+4,1))
            cont2+=4})
    }
}


keyboard.q().onPressDo {
    if(tablero.mostrarMazo().isEmpty()) {
        tablero.contarPuntos()
        console.println(jugador1.puntajeJugador())
        console.println(jugador2.puntajeJugador())
        tablero.mostrarMesa().forEach({_carta => jugador.anadirCartaMonto(_carta)
                                                 game.removeVisual(_carta)})
        tablero.limpiarMesa() 
    }
}

game.start()
}
