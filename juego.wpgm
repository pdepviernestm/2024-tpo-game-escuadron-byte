import jugador.*
import tablero.*
import cartas.*
import wollok.game.*

object marco {
    var property position = game.origin()
    method image() = "marco.png"
}

object monto {
    var property position = game.origin()
    method image() = "monto.jpg"
}

program juego {


const jugador1 = new Jugador()
const jugador2 = new Jugador()
tablero.anadirJugadores(jugador1)
tablero.anadirJugadores(jugador2)

jugador1.turno(1)

var jugador = tablero.jugadorConTurno()

var mesaAux = tablero.mostrarMesa()
var manoAux = jugador.mostrarMano()

var carta = 0
var indiceMesa = 0
var indiceMano = 0
var state = 0
var cont = 0
var cont2 = 0

game.width(22)
game.height(22)

game.boardGround("fondo1.png")

tablero.llenarMazo()

if (!tablero.mostrarMazo().isEmpty()) {
    // llenar mesa
    tablero.llenarMesa()
    mesaAux.forEach({
            carta => game.addVisual(carta)
            carta.position(game.at(cont+4,10))
            cont+=4})

    // repartir jugadores
    tablero.repartirJugadores()
    jugador1.mostrarMano().forEach({
        carta => game.addVisual(carta)
        carta.position(game.at(cont2+4,18))
        cont2+=4})
    cont2 = 0
    jugador2.mostrarMano().forEach({
        carta => game.addVisual(carta)
        carta.position(game.at(cont2+4,1))
        cont2+=4})

} else {
    throw new Exception(message="El mazo no fue llenado correctamente antes de repartir.")
  }



game.addVisual(marco)
marco.position(manoAux.get(0).position())

keyboard.left().onPressDo {
    if (state == 0) {
        indiceMano = tablero.moverIzq(indiceMano)
        carta = manoAux.get(indiceMano)
        marco.position(carta.position())
    } else if (state == 1) {
        indiceMesa = tablero.moverIzq(indiceMesa)
        carta = mesaAux.get(indiceMesa)
        marco.position(carta.position())
    }
}

keyboard.right().onPressDo {
    if (state == 0) {
        indiceMano = tablero.moverDer(indiceMano)
        carta = manoAux.get(indiceMano)
        marco.position(carta.position())
    } else if (state == 1) {
        indiceMesa = tablero.moverDer(indiceMesa)
        carta = mesaAux.get(indiceMesa)
        marco.position(carta.position())
    }
}

keyboard.enter().onPressDo {
    game.say(carta, carta.msg()) 
    jugador.anadirCartaAJugar(carta)
    }

keyboard.r().onPressDo {
    state += 1
}

keyboard.e().onPressDo {
    state = 0
    if(jugador.hayJugada()){
        jugador.mostrarCartasAJugar().forEach({_carta => game.removeVisual(_carta)})
        tablero.jugada(jugador)
        jugador.jugada()
        game.addVisual(monto)
        monto.position(game.at(20,20))
    } else {
        jugador.limpiarCartasAJugar()
        throw new Exception(message="No hay jugada.")
        }

    tablero.cambiarTurno()
    jugador = tablero.jugadorConTurno()
    mesaAux = tablero.mostrarMesa()
    manoAux = jugador.mostrarMano()
    }

keyboard.t().onPressDo {
    if(manoAux.contains(carta)){
        game.removeVisual(carta)
        jugador.eliminarCartaMano(carta)
        tablero.anadirCartaMesa(carta)
        game.addVisual(carta)
        const cartaAux = mesaAux.get(mesaAux.size()-1)
        carta.position(game.at(cartaAux.position().x()+4,6))
    }
    tablero.cambiarTurno()
    jugador = tablero.jugadorConTurno()
    mesaAux = tablero.mostrarMesa()
    manoAux = jugador.mostrarMano()
}

keyboard.f().onPressDo {
    if(jugador1.mostrarMano().isEmpty() && jugador2.mostrarMano().isEmpty()){
        cont2 = 0
        tablero.repartirJugadores()
        jugador1.mostrarMano().forEach({
            carta => game.addVisual(carta)
            carta.position(game.at(cont2+4,18))
            cont2+=4})
        cont2 = 0
        jugador2.mostrarMano().forEach({
            carta => game.addVisual(carta)
            carta.position(game.at(cont2+4,1))
            cont2+=4})
    }
}


keyboard.q().onPressDo {
    if(tablero.mostrarMazo().isEmpty()) {
        tablero.contarPuntos()
        tablero.mostrarMesa().forEach({_carta => jugador.anadirCartaMonto(_carta)
                                                 game.removeVisual(_carta)
                                                 })
        tablero.limpiarMesa()
    }
}

game.start()
}
